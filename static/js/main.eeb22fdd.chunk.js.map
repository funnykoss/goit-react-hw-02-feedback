{"version":3,"sources":["components/FeedBackOptions/FeedBackOptions.module.css","components/Statistic/Statistics.module.css","components/Statistic/Statistic.jsx","components/Section/Section.jsx","components/FeedBackOptions/FeedBackOptions.jsx","components/Notification/Notification.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Statistics","good","neutral","bad","total","positiveFeedbackPercentage","className","s","list","Section","title","children","section","defaultProps","FeedbackOptions","onLeaveFeedback","buttonBox","buttonGood","type","name","onClick","buttonNeutral","buttonBad","Notification","message","App","state","toSetState","e","setState","prevState","target","countTotalFeedback","countPositiveFeedbackPercentage","Math","floor","this","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,UAAY,mCAAmC,OAAS,gCAAgC,WAAa,oCAAoC,cAAgB,uCAAuC,UAAY,qC,uCCA9ND,EAAOC,QAAU,CAAC,KAAO,2B,uLCET,SAASC,EAAT,GAA+E,IAAxDC,EAAuD,EAAvDA,KAAMC,EAAiD,EAAjDA,QAASC,EAAwC,EAAxCA,IAAKC,EAAmC,EAAnCA,MAAOC,EAA4B,EAA5BA,2BAC9D,OAEO,8BACK,qBAAIC,UAAWC,IAAEC,KAAjB,UACA,6BACI,uCAAUP,OAEd,6BACI,0CAAaC,OAEjB,6BACI,sCAASC,OAEb,6BACI,wCAAWC,OAEf,6BACI,oDAAuBC,EAAvB,c,oBClBL,SAASI,EAAT,GAAgD,IAAD,IAA5BC,aAA4B,MAApB,QAAoB,EAAXC,EAAW,EAAXA,SAC/C,OACI,sBAAKL,UAAWC,IAAEK,QAAlB,UACI,oBAAIN,UAAWC,IAAEG,MAAjB,SAAyBA,IACxBC,KAIbF,EAAQI,aAAe,CACrBH,MAAO,c,oBCRM,SAASI,EAAT,GAAgD,IAApBC,EAAmB,EAAnBA,gBACzC,OACE,sBAAKT,UAAWC,IAAES,UAAlB,UACE,wBAAQV,UAAWC,IAAEU,WAAYC,KAAK,SAASC,KAAK,OAAOC,QAASL,EAApE,kBAGA,wBAAQT,UAAWC,IAAEc,cAAeH,KAAK,SAASC,KAAK,UAAUC,QAASL,EAA1E,qBAGA,wBAAQT,UAAWC,IAAEe,UAAWJ,KAAK,SAASC,KAAK,MAAMC,QAASL,EAAlE,oB,qBCTS,SAASQ,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACnC,OACI,oBAAIlB,UAAWC,IAAEG,MAAjB,SAA0Bc,I,ICDbC,E,4MACnBC,MAAQ,CACNzB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAEPwB,WAAa,SAAAC,GACX,EAAKC,UAAS,SAAAC,GAAS,sBACpBF,EAAEG,OAAOZ,KAAOW,EAAUF,EAAEG,OAAOZ,MAAQ,O,EAIhDa,mBAAqB,WACnB,OAAO,EAAKN,MAAMzB,KAAO,EAAKyB,MAAMvB,IAAM,EAAKuB,MAAMxB,S,EAGvD+B,gCAAkC,WAChC,OAAOC,KAAKC,MAAyB,IAAlB,EAAKT,MAAMzB,KAAc,EAAK+B,uB,4CAGnD,WACE,IAAI5B,EAAQgC,KAAKJ,qBAEjB,OACE,qCACE,cAACvB,EAAD,CAASC,MAAM,wBAAf,SACE,cAACI,EAAD,CAAiBC,gBAAiBqB,KAAKT,eAE9B,IAAVvB,EACC,cAACmB,EAAD,CAAcC,QAAQ,sBAEtB,cAACf,EAAD,UACE,cAACT,EAAD,CACEC,KAAMmC,KAAKV,MAAMzB,KACjBC,QAASkC,KAAKV,MAAMxB,QACpBC,IAAKiC,KAAKV,MAAMvB,IAChBC,MAAOgC,KAAKJ,qBACZ3B,2BAA4B+B,KAAKH,6C,GArCdI,aCOlBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.eeb22fdd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonBox\":\"FeedBackOptions_buttonBox__1cFo7\",\"button\":\"FeedBackOptions_button__2DsPt\",\"buttonGood\":\"FeedBackOptions_buttonGood__4QF7S\",\"buttonNeutral\":\"FeedBackOptions_buttonNeutral__10BXs\",\"buttonBad\":\"FeedBackOptions_buttonBad__1tHt9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__2DVeU\"};","import React from 'react';\nimport s from '../Statistic/Statistics.module.css';\n\n export default function Statistics ({ good, neutral, bad, total, positiveFeedbackPercentage}){\n    return (\n       \n           <div>\n                <ul className={s.list}>\n                <li>\n                    <p>Good: {good}</p>\n                </li>\n                <li>\n                    <p>Neutral: {neutral}</p>\n                </li>\n                <li>\n                    <p>Bad: {bad}</p>\n                </li>\n                <li>\n                    <p>Total: {total}</p>\n                </li>\n                <li>\n                    <p>Positive Feedback: {positiveFeedbackPercentage}%</p>\n                </li>\n                </ul>\n            </div>\n         \n     )\n}\n\n \n ","import React from 'react';\nimport s from '../Section/Section.modules.css';\n\nexport default function Section({ title = 'Title', children }){\n    return (\n        <div className={s.section}>\n            <h1 className={s.title}>{title}</h1>\n            {children}\n        </div>\n    );\n}\nSection.defaultProps = {\n  title: \"Statistics\",\n};","import React from 'react';\nimport s from '../FeedBackOptions/FeedBackOptions.module.css';\n\n\nexport default function FeedbackOptions ({ onLeaveFeedback }) {\n  return (\n    <div className={s.buttonBox}>\n      <button className={s.buttonGood} type=\"button\" name=\"good\" onClick={onLeaveFeedback}>\n        Good\n      </button>\n      <button className={s.buttonNeutral} type=\"button\" name=\"neutral\" onClick={onLeaveFeedback}>\n        Neutral\n      </button>\n      <button className={s.buttonBad} type=\"button\" name=\"bad\" onClick={onLeaveFeedback}>\n        Bad\n      </button>\n    </div>\n  );\n};\n// FeedbackOptions.propTypes = {\n//   onLeaveFeedback: PropTypes.func.isRequired,\n// };\n","import React from \"react\";\nimport s from '../Notification/Notification.modules.css'\n\n\nexport default function Notification({ message }) {\n    return (\n        <h2 className={s.title}>{ message}</h2>\n    )\n}","import React, { Component } from 'react';\nimport Statistics from './components/Statistic/Statistic.jsx';\nimport Section from './components/Section/Section.jsx';\nimport FeedbackOptions from './components/FeedBackOptions/FeedBackOptions.jsx';\nimport Notification from './components/Notification/Notification.jsx';\nexport default class App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n  toSetState = e => {\n    this.setState(prevState => ({\n      [e.target.name]: prevState[e.target.name] + 1,\n    }));\n  };\n\n  countTotalFeedback = () => {\n    return this.state.good + this.state.bad + this.state.neutral;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    return Math.floor((this.state.good * 100) / this.countTotalFeedback());\n  };\n\n  render() {\n    let total = this.countTotalFeedback();\n\n    return (\n      <>\n        <Section title=\"Please leave feeaback\">\n          <FeedbackOptions onLeaveFeedback={this.toSetState} />\n        </Section>\n        {total === 0 ? (\n          <Notification message=\"No feedback given\" />\n        ) : (\n          <Section>\n            <Statistics\n              good={this.state.good}\n              neutral={this.state.neutral}\n              bad={this.state.bad}\n              total={this.countTotalFeedback()}\n              positiveFeedbackPercentage={this.countPositiveFeedbackPercentage()}\n            />\n          </Section>\n        )}\n      </>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}